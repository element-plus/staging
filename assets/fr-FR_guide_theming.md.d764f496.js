import{f as e,o as n,c as s,b as a,g as t,h as o,d as p,e as l}from"./app.018707e7.js";const c='{"title":"Thème","description":"","frontmatter":{"title":"Thème"},"headers":[{"level":2,"title":"Changer la couleur du thème","slug":"changer-la-couleur-du-theme"},{"level":3,"title":"Mettre à jour les variables SCSS de votre projet","slug":"mettre-a-jour-les-variables-scss-de-votre-projet"},{"level":3,"title":"Outil de thème CLI","slug":"outil-de-theme-cli"},{"level":3,"title":"Utiliser un thème personnalisé","slug":"utiliser-un-theme-personnalise"}],"relativePath":"fr-FR/guide/theming.md","lastUpdated":1631863977287}',r={},i={id:"theme-obsolete-depuis-la-version-1-1-0-beta-1",tabindex:"-1"},u=p("Thème "),d=p("Obsolète depuis la version 1.1.0-beta.1"),m=p(),k=a("a",{class:"header-anchor",href:"#theme-obsolete-depuis-la-version-1-1-0-beta-1","aria-hidden":"true"},"#",-1),h=l('<p>Element Plus utilise le style BEM pour le CSS afin que vous puissiez écraser les règles prédéfinies facilement. Mais si vous devez remplacer les styles à grande échelle, par ex. changer la couleur du thème de bleu à orange ou vert, peut-être les remplacer un par un n&#39;est pas une bonne idée. Nous fournissons quatre façons de changer les variables de style.</p><h2 id="changer-la-couleur-du-theme" tabindex="-1">Changer la couleur du thème <a class="header-anchor" href="#changer-la-couleur-du-theme" aria-hidden="true">#</a></h2><p>Si vous voulez juste changer la couleur du thème de l&#39;élément Plus, le site d&#39;aperçu du thème <a href="https://element-plus.github.io/theme-chalk-preview/#/en-US" target="_blank" rel="noopener noreferrer"></a> est recommandé. La couleur du thème d&#39;Element Plus est un bleu clair et agréable. En le changant, vous pouvez rendre Element Plus plus connecté visuellement à des projets spécifiques.</p><p>Le site Web ci-dessus vous permet de prévisualiser le thème d&#39;une nouvelle couleur de thème en temps réel et il peut générer un package de style complet basé sur la nouvelle couleur du thème pour vous à télécharger directement (pour importer de nouveaux fichiers de style dans votre projet, veuillez vous référer à la partie &#39;Importer un thème personnalisé&#39; ou &#39;Importer un thème de composant à la demande&#39; de cette section).</p><h3 id="mettre-a-jour-les-variables-scss-de-votre-projet" tabindex="-1">Mettre à jour les variables SCSS de votre projet <a class="header-anchor" href="#mettre-a-jour-les-variables-scss-de-votre-projet" aria-hidden="true">#</a></h3><p><code>theme-chalk</code> est écrit en SCSS. Si votre projet utilise également SCSS, vous pouvez directement modifier les variables de style Element Plus. Créez un nouveau fichier, e.g. <code>element-variables.scss</code>:</p><div class="language-scss"><pre><code><span class="token comment">/* theme color */</span>\n<span class="token property"><span class="token variable">$--color-primary</span></span><span class="token punctuation">:</span> teal<span class="token punctuation">;</span> <span class="token comment">/* icon font path, required */</span>\n<span class="token property"><span class="token variable">$--font-path</span></span><span class="token punctuation">:</span> <span class="token string">&#39;~element-plus/lib/theme-chalk/fonts&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">@import</span> <span class="token string">&#39;~element-plus/packages/theme-chalk/src/index&#39;</span><span class="token punctuation">;</span>\n</code></pre></div><p>Puis dans le fichier d&#39;entrée de votre projet, importez ce fichier de style au lieu du CSS compilé d&#39;Element:</p><div class="language-JS"><pre><code><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> ElementPlus <span class="token keyword">from</span> <span class="token string">&#39;element-plus&#39;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;./element-variables.scss&#39;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./App.vue&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ElementPlus<span class="token punctuation">)</span>\n</code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Notez qu&#39;il est nécessaire de remplacer le chemin de la police des icônes par le chemin relatif des fichiers de police de l&#39;élément .</p></div><h3 id="outil-de-theme-cli" tabindex="-1">Outil de thème CLI <a class="header-anchor" href="#outil-de-theme-cli" aria-hidden="true">#</a></h3><p>Si votre projet n&#39;utilise pas SCSS, vous pouvez personnaliser les thèmes avec notre outil de thème CLI :</p><h4 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-hidden="true">#</a></h4><p>Installez d&#39;abord le générateur de thème globalement ou localement. Une installation locale est recommandé afin que les personnes clonant votre dépôt bénéficient d&#39;une installation automatique via npm.</p><div class="language-shell"><pre><code><span class="token function">npm</span> i element-theme -g\n</code></pre></div><p>Ensuite, installez le thème craie à partir de npm ou GitHub.</p><div class="language-shell"><pre><code><span class="token comment"># from npm</span>\n<span class="token function">npm</span> i element-theme-chalk -D\n\n<span class="token comment"># from GitHub</span>\n<span class="token function">npm</span> i https://github.com/ElementUI/theme-chalk -D\n</code></pre></div><h4 id="initialisation-d-un-fichier-de-variable" tabindex="-1">Initialisation d&#39;un fichier de variable <a class="header-anchor" href="#initialisation-d-un-fichier-de-variable" aria-hidden="true">#</a></h4><p>After successfully installing the above packages, a command named <code>et</code> is available in CLI (if the packages are installed locally, use <code>node_modules/.bin/et</code> instead). Exécutez <code>-i</code> pour initialiser le fichier de variable qui sort à <code>element-variables.scss</code> par défaut. Et vous pouvez spécifier son répertoire de sortie comme vous le souhaitez.</p><div class="language-shell"><pre><code>et -i <span class="token punctuation">[</span>custom output file<span class="token punctuation">]</span>\n\n<span class="token operator">&gt;</span> ✅ Generator variables <span class="token function">file</span>\n</code></pre></div><p>Dans <code>element-variables.scss</code> vous pouvez trouver toutes les variables que nous avons utilisées pour styliser Element Plus et elles sont définies au format SCSS. Voici un extrait :</p><div class="language-css"><pre><code>$<span class="token property">--color-primary</span><span class="token punctuation">:</span> #409EFF !default<span class="token punctuation">;</span>\n$<span class="token property">--color-primary-light-1</span><span class="token punctuation">:</span> <span class="token function">mix</span><span class="token punctuation">(</span>$--color-white<span class="token punctuation">,</span> $--color-primary<span class="token punctuation">,</span> 10%<span class="token punctuation">)</span> ! efault<span class="token punctuation">;</span> <span class="token comment">/* 53a8ff */</span>\n$<span class="token property">--color-primary-light-2</span><span class="token punctuation">:</span> <span class="token function">mix</span><span class="token punctuation">(</span>$--color-white<span class="token punctuation">,</span> $--color-primary<span class="token punctuation">,</span> 20%<span class="token punctuation">)</span> !default<span class="token punctuation">;</span> <span class="token comment">/* 66b1ff */</span>\n$<span class="token property">--color-primary-light-3</span><span class="token punctuation">:</span> <span class="token function">mix</span><span class="token punctuation">(</span>$--color-white<span class="token punctuation">,</span> $--color-primary<span class="token punctuation">,</span> 30%<span class="token punctuation">)</span> ! efault<span class="token punctuation">;</span> <span class="token comment">/* 79bbff */</span>\n$<span class="token property">--color-primary-light-4</span><span class="token punctuation">:</span> <span class="token function">mix</span><span class="token punctuation">(</span>$--color-white<span class="token punctuation">,</span> $--color-primary<span class="token punctuation">,</span> 40%<span class="token punctuation">)</span> !default<span class="token punctuation">;</span> <span class="token comment">/* 8cc5ff */</span>\n$<span class="token property">--color-primary-light-5</span><span class="token punctuation">:</span> <span class="token function">mix</span><span class="token punctuation">(</span>$--color-white<span class="token punctuation">,</span> $--color-primary<span class="token punctuation">,</span> 50%<span class="token punctuation">)</span> ! efault<span class="token punctuation">;</span> <span class="token comment">/* a0cfff */</span>\n$<span class="token property">--color-primary-light-6</span><span class="token punctuation">:</span> <span class="token function">mix</span><span class="token punctuation">(</span>$--color-white<span class="token punctuation">,</span> $--color-primary<span class="token punctuation">,</span> 60%<span class="token punctuation">)</span> ! efault<span class="token punctuation">;</span> <span class="token comment">/* b3d8ff */</span>\n$<span class="token property">--color-primary-light-7</span><span class="token punctuation">:</span> <span class="token function">mix</span><span class="token punctuation">(</span>$--color-white<span class="token punctuation">,</span> $--color-primary<span class="token punctuation">,</span> 70%<span class="token punctuation">)</span> !default<span class="token punctuation">;</span> <span class="token comment">/* c6e2ff */</span>\n$<span class="token property">--color-primary-light-8</span><span class="token punctuation">:</span> <span class="token function">mix</span><span class="token punctuation">(</span>$--color-white<span class="token punctuation">,</span> $--color-primary<span class="token punctuation">,</span> 80%<span class="token punctuation">)</span> ! efault<span class="token punctuation">;</span> <span class="token comment">/* d9ecff */</span>\n$<span class="token property">--color-primary-light-9</span> <span class="token punctuation">:</span> <span class="token function">mix</span><span class="token punctuation">(</span>$--color-white<span class="token punctuation">,</span> $--color-primary<span class="token punctuation">,</span> 90%<span class="token punctuation">)</span> ! efault<span class="token punctuation">;</span> <span class="token comment">/* ecf5ff */</span>\n\n$<span class="token property">--color-success</span><span class="token punctuation">:</span> #67c23a !default<span class="token punctuation">;</span>\n$<span class="token property">--color-warning</span><span class="token punctuation">:</span> #e6a23c !default<span class="token punctuation">;</span>\n$<span class="token property">--color-danger</span><span class="token punctuation">:</span> #f56c6c !default<span class="token punctuation">;</span>\n$<span class="token property">--color-info</span><span class="token punctuation">:</span> #909399 !default<span class="token punctuation">;</span>\n\n...\n</code></pre></div><h4 id="modifier-les-variables" tabindex="-1">Modifier les variables <a class="header-anchor" href="#modifier-les-variables" aria-hidden="true">#</a></h4><p>Éditez simplement <code>element-variables.scss</code>, par exemple en changeant la couleur du thème en rouge:</p><div class="language-CSS"><pre><code>$<span class="token property">--color-primary</span><span class="token punctuation">:</span> rouge<span class="token punctuation">;</span>\n</code></pre></div><h4 id="generer-le-theme" tabindex="-1">Générer le thème <a class="header-anchor" href="#generer-le-theme" aria-hidden="true">#</a></h4><p>Après avoir sauvegardé le fichier variable, utilisez <code>et</code> pour construire votre thème. Vous pouvez activer le mode <code>montre</code> en ajoutant un paramètre <code>-w</code>. Et si vous avez personnalisé la sortie du fichier de la variable, vous devez ajouter un paramètre <code>-c</code> et le nom du fichier variable. Par le fichier de thème de construction est placé par défaut dans <code>./theme</code>. Vous pouvez spécifier son répertoire de sortie avec le paramètre <code>-o</code>.</p><div class="language-shell"><pre><code>et\n\n<span class="token operator">&gt;</span> ✅ build theme font\n<span class="token operator">&gt;</span> ✅ build element theme\n</code></pre></div><h3 id="utiliser-un-theme-personnalise" tabindex="-1">Utiliser un thème personnalisé <a class="header-anchor" href="#utiliser-un-theme-personnalise" aria-hidden="true">#</a></h3><p>Nous couvrirons comment utiliser votre thème personnalisé dans votre projet dans cette section</p><h4 id="importer-le-theme" tabindex="-1">Importer le thème <a class="header-anchor" href="#importer-le-theme" aria-hidden="true">#</a></h4><p>Importation de votre propre thème, c&#39;est comme importer le thème par défaut, seulement cette fois vous importez le fichier construit à partir de &quot;Routeur de Thèmes en ligne&quot; ou &quot;Outil de CLI&quot;:</p><div class="language-javascript"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;../theme/index.css&#39;</span>\n<span class="token keyword">import</span> ElementPlus <span class="token keyword">from</span> <span class="token string">&#39;element-plus&#39;</span>\n\n<span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ElementPlus<span class="token punctuation">)</span>\n</code></pre></div><h4 id="importer-le-theme-d-un-composant-sur-demande" tabindex="-1">Importer le thème d&#39;un composant sur demande <a class="header-anchor" href="#importer-le-theme-d-un-composant-sur-demande" aria-hidden="true">#</a></h4><p>Si vous utilisez le composant <code>babel-plugin-component</code> pour l&#39;importation à la demande, modifiez simplement <code>. abelrc</code> et spécifiez <code>styleLibraryName</code> au chemin où votre thème personnalisé est situé par rapport à <code>. abelrc</code>. Notez que <code>~</code> est requis :</p><div class="language-json"><pre><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;plugins&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">[</span>\n      <span class="token string">&quot;component&quot;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        <span class="token property">&quot;libraryName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;element-plus&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;styleLibraryName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;~theme&quot;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>Si vous ne connaissez pas <code>babel-plugin-component</code>, veuillez vous référer à <a href="/en-US/guide/quickstart.html">Quick Start</a>. Pour plus de détails, consultez le <a href="https://github.com/ElementUI/element-theme" target="_blank" rel="noopener noreferrer">dépôt de projet</a> de <code>thème élément-</code>.</p>',37);r.render=function(p,l,c,r,f,v){const g=e("el-tag");return n(),s("div",null,[a("h1",i,[u,t(g,{type:"error",style:{"vertical-align":"middle"}},{default:o((()=>[d])),_:1}),m,k]),h])};export{c as __pageData,r as default};
