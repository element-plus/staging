import{o,c as p,b as s,a as t,e as n,d as a,_ as c}from"./app.b5873cc4.js";const l=n(`<h1 id="dark-mode" tabindex="-1">Dark Mode <span class="vp-tag">2.2.0</span> <a class="header-anchor vp-link" href="#dark-mode" aria-hidden="true">#</a></h1><p>After a long time, Element Plus supports dark mode!</p><p>We extracted and unified all necessary variables to make it possible to implement based on CSS Vars.</p><h2 id="how-to-enable-it" tabindex="-1">How to enable it? <a class="header-anchor vp-link" href="#how-to-enable-it" aria-hidden="true">#</a></h2><p>First you can create a switch to toggle <code>dark</code> class of html.</p><blockquote><p>If you only need dark mode, just add <code>dark</code> class for html.</p></blockquote><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dark<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>`,7),r=a("If you want to toggle it, i recommend "),i={href:"https://vueuse.org/core/useDark/",class:"vp-link",target:"_blank",rel:"noopener noreferrer"},u=a("useDark | VueUse"),d=a("."),k=n(`<p>Then, you can quickly enable it with just one line of code to import CSS in your entry.</p><div class="language-ts"><pre><code><span class="token comment">// main.ts</span>
<span class="token comment">// if you just want to import css</span>
<span class="token keyword">import</span> <span class="token string">&#39;element-plus/theme-chalk/dark/css-vars.css&#39;</span>
</code></pre></div>`,2),m=a("If you want an example, you can refer to "),_={href:"https://github.com/element-plus/element-plus-vite-starter",class:"vp-link",target:"_blank",rel:"noopener noreferrer"},h=a("element-plus-vite-starter"),g=a("."),v=n(`<h2 id="custom-variables" tabindex="-1">Custom variables <a class="header-anchor vp-link" href="#custom-variables" aria-hidden="true">#</a></h2><h3 id="by-css" tabindex="-1">By CSS <a class="header-anchor vp-link" href="#by-css" aria-hidden="true">#</a></h3><p>Just override it by CSS Vars.</p><p>For example, new file <code>styles/dark/css-vars.css</code>:</p><div class="language-css"><pre><code><span class="token selector">html.dark</span> <span class="token punctuation">{</span>
  <span class="token comment">/* custom dark bg color */</span>
  <span class="token property">--el-bg-color</span><span class="token punctuation">:</span> #626aef<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Import it after styles of Element Plus:</p><div class="language-ts"><pre><code><span class="token comment">// main.ts</span>
<span class="token keyword">import</span> <span class="token string">&#39;element-plus/theme-chalk/dark/css-vars.css&#39;</span>
<span class="token keyword">import</span> <span class="token string">&#39;./styles/dark/css-vars.css&#39;</span>
</code></pre></div><h3 id="by-scss" tabindex="-1">By SCSS <a class="header-anchor vp-link" href="#by-scss" aria-hidden="true">#</a></h3><p>If you use scss, you can also import scss file to compile.</p><blockquote><p>You can refer <a href="./theming.html" class="vp-link">Theming</a> to get more info.</p></blockquote><div class="language-scss"><pre><code><span class="token comment">// styles/element/index.scss</span>
<span class="token comment">/*just override what you need*/</span>
<span class="token keyword">@forward</span> <span class="token string">&#39;element-plus/theme-chalk/src/dark/var.scss&#39;</span> <span class="token module-modifier keyword">with</span> <span class="token punctuation">(</span>
  <span class="token property"><span class="token variable">$bg-color</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>
    <span class="token string">&#39;page&#39;</span><span class="token punctuation">:</span> #0a0a0a<span class="token punctuation">,</span>
    <span class="token string">&#39;&#39;</span><span class="token punctuation">:</span> #626aef<span class="token punctuation">,</span>
    <span class="token string">&#39;overlay&#39;</span><span class="token punctuation">:</span> #1d1e1f<span class="token punctuation">,</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><div class="language-ts"><pre><code><span class="token comment">// main.ts</span>
<span class="token keyword">import</span> <span class="token string">&#39;./styles/element/index.scss&#39;</span>

<span class="token comment">// or just want to import scss?</span>
<span class="token comment">// import &#39;element-plus/theme-chalk/src/dark/css-vars.scss&#39;</span>
</code></pre></div>`,12),T='{"title":"Dark Mode","description":"","frontmatter":{"title":"Dark Mode","lang":"en-US"},"headers":[{"level":2,"title":"How to enable it?","slug":"how-to-enable-it"},{"level":2,"title":"Custom variables","slug":"custom-variables"},{"level":3,"title":"By CSS","slug":"by-css"},{"level":3,"title":"By SCSS","slug":"by-scss"}],"relativePath":"en-US/guide/dark-mode.md","lastUpdated":1701338805000}',b={},C=Object.assign(b,{__name:"dark-mode",setup(y){return(f,S)=>{const e=c;return o(),p("div",null,[l,s("blockquote",null,[s("p",null,[r,s("a",i,[u,t(e,{class:"link-icon"})]),d])]),k,s("blockquote",null,[s("p",null,[m,s("a",_,[h,t(e,{class:"link-icon"})]),g])]),v])}}});export{T as __pageData,C as default};
