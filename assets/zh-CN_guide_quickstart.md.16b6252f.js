import{_ as n,r as s,c as a,b as e,a as t,w as p,e as o,d as c,o as l}from"./app.fc8a40e2.js";const r='{"title":"快速开始","description":"","frontmatter":{"title":"快速开始","lang":"zh-CN"},"headers":[{"level":2,"title":"用法","slug":"用法"},{"level":3,"title":"完整引入","slug":"完整引入"},{"level":3,"title":"按需导入","slug":"按需导入"},{"level":2,"title":"快捷搭建项目模板","slug":"快捷搭建项目模板"},{"level":3,"title":"Vue CLI","slug":"vue-cli"},{"level":3,"title":"使用 Starter Kit","slug":"使用-starter-kit"},{"level":2,"title":"全局配置","slug":"全局配置"},{"level":2,"title":"使用 Nuxt.js","slug":"使用-nuxt-js"},{"level":2,"title":"开始使用","slug":"开始使用"}],"relativePath":"zh-CN/guide/quickstart.md","lastUpdated":1635564883577}',u={},i=o('<h1 id="快速开始" tabindex="-1">快速开始 <a class="header-anchor" href="#快速开始" aria-hidden="true">#</a></h1><p>本节将介绍如何在项目中使用 Element Plus。</p><h2 id="用法" tabindex="-1">用法 <a class="header-anchor" href="#用法" aria-hidden="true">#</a></h2><h3 id="完整引入" tabindex="-1">完整引入 <a class="header-anchor" href="#完整引入" aria-hidden="true">#</a></h3><p>如果你对打包后的文件大小不是很在乎，那么使用完整导入会更方便。</p><div class="language-typescript"><pre><code><span class="token comment">// main.ts</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> ElementPlus <span class="token keyword">from</span> <span class="token string">&#39;element-plus&#39;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;element-plus/dist/index.css&#39;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./App.vue&#39;</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>\n\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ElementPlus<span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>\n</code></pre></div><h4 id="volar-支持" tabindex="-1">Volar 支持 <a class="header-anchor" href="#volar-支持" aria-hidden="true">#</a></h4><p>如果您使用 Volar，请在 <code>tsconfig.json</code> 中通过 <code>compilerOptions.type</code> 指定全局组件类型。</p><div class="language-json"><pre><code><span class="token comment">// tsconfig.json</span>\n<span class="token punctuation">{</span>\n  <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// ...</span>\n    <span class="token property">&quot;types&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;element-plus/global&quot;</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="按需导入" tabindex="-1">按需导入 <a class="header-anchor" href="#按需导入" aria-hidden="true">#</a></h3><p>您需要使用额外的插件来导入要使用的组件。</p>',11),k={id:"自动导入-推荐",tabindex:"-1"},d=c("自动导入 "),h=c("推荐"),m=c(),g=e("a",{class:"header-anchor",href:"#自动导入-推荐","aria-hidden":"true"},"#",-1),f=o('<p>首先需要安装 <code>unplugin-vue-components</code>。</p><div class="language-shell"><pre><code><span class="token function">npm</span> <span class="token function">install</span> unplugin-vue-components\n</code></pre></div><p>然后将以下代码添加到 <code>Vite</code> 或 <code>Webpack</code> 的配置文件中。</p><h5 id="vite" tabindex="-1">Vite <a class="header-anchor" href="#vite" aria-hidden="true">#</a></h5><div class="language-ts"><pre><code><span class="token comment">// vite.config.ts</span>\n<span class="token keyword">import</span> Components <span class="token keyword">from</span> <span class="token string">&#39;unplugin-vue-components/vite&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ElementPlusResolver <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;unplugin-vue-components/resolvers&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token comment">// ...</span>\n    <span class="token function">Components</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      resolvers<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">ElementPlusResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h5 id="webpack" tabindex="-1">Webpack <a class="header-anchor" href="#webpack" aria-hidden="true">#</a></h5><div class="language-ts"><pre><code><span class="token comment">// webpack.config.js</span>\n<span class="token keyword">const</span> Components <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;unplugin-vue-components/webpack&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> ElementPlusResolver <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;unplugin-vue-components/resolvers&#39;</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token function">Components</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      resolvers<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">ElementPlusResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>其它打包工具的引入方式 (<a href="https://rollupjs.org/" target="_blank" rel="noopener noreferrer">Rollup</a>, <a href="https://cli.vuejs.org/" target="_blank" rel="noopener noreferrer">Vue CLI</a>)，请参考 <a href="https://github.com/antfu/unplugin-vue-components#readme" target="_blank" rel="noopener noreferrer">unplugin-vue-components</a>。</p><h4 id="手动导入" tabindex="-1">手动导入 <a class="header-anchor" href="#手动导入" aria-hidden="true">#</a></h4><p>Element Plus 提供了基于 ES Module 开箱即用的 <a href="https://webpack.js.org/guides/tree-shaking/" target="_blank" rel="noopener noreferrer">Tree Shaking</a> 功能。</p><p>我们提供了对应的插件 <a href="https://github.com/element-plus/vue-cli-plugin-element-plus" target="_blank" rel="noopener noreferrer">Element Plus Vue Cli plugin</a>。 使用 <a href="https://cli.vuejs.org/" target="_blank" rel="noopener noreferrer">vue-cli</a>，您可以快速搭建一个基于 Element Plus 的项目。</p><blockquote><p>App.vue</p></blockquote><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span><span class="token punctuation">&gt;</span></span>I am ElButton<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">import</span> <span class="token punctuation">{</span> ElButton <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;element-plus&#39;</span>\n  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    components<span class="token operator">:</span> <span class="token punctuation">{</span> ElButton <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><div class="language-ts"><pre><code><span class="token comment">// vite.config.ts</span>\n<span class="token keyword">import</span> ElementPlus <span class="token keyword">from</span> <span class="token string">&#39;unplugin-element-plus/vite&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">ElementPlus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="快捷搭建项目模板" tabindex="-1">快捷搭建项目模板 <a class="header-anchor" href="#快捷搭建项目模板" aria-hidden="true">#</a></h2><h3 id="vue-cli" tabindex="-1">Vue CLI <a class="header-anchor" href="#vue-cli" aria-hidden="true">#</a></h3><p>我们提供了对应的插件 <a href="https://github.com/element-plus/vue-cli-plugin-element-plus" target="_blank" rel="noopener noreferrer">Element Plus Vue Cli plugin</a>。 使用 <a href="https://cli.vuejs.org/" target="_blank" rel="noopener noreferrer">vue-cli</a>，您可以快速搭建一个基于 Element Plus 的项目。</p><h3 id="使用-starter-kit" tabindex="-1">使用 Starter Kit <a class="header-anchor" href="#使用-starter-kit" aria-hidden="true">#</a></h3><p>我们提供了通用的 <a href="https://github.com/element-plus/element-plus-starter" target="_blank" rel="noopener noreferrer">项目模板</a>，同时也提供了 <a href="https://github.com/element-plus/element-plus-vite-starter" target="_blank" rel="noopener noreferrer">Vite 模板</a>。 对于 Laravel 用户，我们也准备了<a href="https://github.com/element-plus/element-plus-in-laravel-starter" target="_blank" rel="noopener noreferrer"> Laravel 模板</a>。</p><h2 id="全局配置" tabindex="-1">全局配置 <a class="header-anchor" href="#全局配置" aria-hidden="true">#</a></h2><p>在引入 Element Plus 时，可以传入一个包含 <code>size</code> 和 <code>zIndex</code> 属性的全局配置对象。 <code>size</code> 用于设置表单组件的默认尺寸，<code>zIndex</code> 用于设置弹出组件的层级，<code>zIndex</code> 的默认值为 2000。</p><p>完整引入：</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> ElementPlus <span class="token keyword">from</span> <span class="token string">&#39;element-plus&#39;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./App.vue&#39;</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ElementPlus<span class="token punctuation">,</span> <span class="token punctuation">{</span> size<span class="token operator">:</span> <span class="token string">&#39;small&#39;</span><span class="token punctuation">,</span> zIndex<span class="token operator">:</span> <span class="token number">3000</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>按需引入：</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ElButton <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;element-plus&#39;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./App.vue&#39;</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>\napp<span class="token punctuation">.</span>config<span class="token punctuation">.</span>globalProperties<span class="token punctuation">.</span>$<span class="token constant">ELEMENT</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// options</span>\n<span class="token punctuation">}</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ElButton<span class="token punctuation">)</span>\n</code></pre></div><h2 id="使用-nuxt-js" tabindex="-1">使用 Nuxt.js <a class="header-anchor" href="#使用-nuxt-js" aria-hidden="true">#</a></h2><p>我们也可以使用 <a href="https://nuxtjs.org" target="_blank" rel="noopener noreferrer">Nuxt.js</a>：</p><div class="glitch-embed-wrap" style="height:420px;width:100%;"><iframe src="https://glitch.com/embed/#!/embed/nuxt-with-element?path=nuxt.config.js&amp;previewSize=0&amp;attributionHidden=true" alt="nuxt-with-element on glitch" style="height:100%;width:100%;border:0;"></iframe></div><h2 id="开始使用" tabindex="-1">开始使用 <a class="header-anchor" href="#开始使用" aria-hidden="true">#</a></h2><p>您现在就可以启动项目了，对于每个组件的使用方法，请参阅对应组件的文档。</p>',30);var v=n(u,[["render",function(n,o,c,r,u,v){const b=s("el-tag");return l(),a("div",null,[i,e("h4",k,[d,t(b,{type:"primary",style:{"vertical-align":"middle"},effect:"dark",size:"small"},{default:p((()=>[h])),_:1}),m,g]),f])}]]);export{r as __pageData,v as default};
